name: Kittygram CI/CD

on:
  push:
    branches: [ main ]

env:
  POSTGRES_DB: kittygram
  POSTGRES_USER: kittygram_user
  POSTGRES_PASSWORD: kittygram_password
  DB_NAME: kittygram
  DB_HOST: db
  DB_PORT: 5432
  SECRET_KEY: 11052004Lera
  DEBUG: "False"
  ALLOWED_HOSTS: "*"
  DOCKERHUB_USERNAME: lerasalamaha

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Run tests
        run: |
          cd backend
          python manage.py test

  build_and_push:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/kittygram_backend ./backend
          docker push ${{ env.DOCKERHUB_USERNAME }}/kittygram_backend
      - name: Build and push frontend
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/kittygram_frontend ./frontend
          docker push ${{ env.DOCKERHUB_USERNAME }}/kittygram_frontend
      - name: Build and push gateway
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/kittygram_gateway ./nginx
          docker push ${{ env.DOCKERHUB_USERNAME }}/kittygram_gateway

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "docker-compose.production.yml"
          target: "~/kittygram/"
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd ~/kittygram
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ env.DOCKERHUB_USERNAME }} --password-stdin
            docker compose -f docker-compose.production.yml pull
            docker compose -f docker-compose.production.yml down
            docker compose -f docker-compose.production.yml up -d
            docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input
