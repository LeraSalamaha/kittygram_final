name: Kittygram CI/CD

on:
  push:
    branches: [ main ]

env:
  POSTGRES_DB: kittygram
  POSTGRES_USER: kittygram_user
  POSTGRES_PASSWORD: kittygram_password
  DB_NAME: kittygram
  DB_HOST: db
  DB_PORT: 5432
  SECRET_KEY: 11052004Lera
  DEBUG: "False"
  ALLOWED_HOSTS: "*"

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      
      - name: Run tests
        run: |
          cd backend
          python manage.py test

  build_and_push:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push backend
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_backend:latest \
            --push \
            ./backend
      
      - name: Build and push frontend
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_frontend:latest \
            --push \
            ./frontend
      
      - name: Build and push gateway
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/kittygram_gateway:latest \
            --push \
            ./nginx

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      
      - name: Copy compose file
        run: |
          scp -o StrictHostKeyChecking=no \
            docker-compose.production.yml \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/kittygram/
      
      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
            "cd ~/kittygram && \
            docker compose -f docker-compose.production.yml pull && \
            docker compose -f docker-compose.production.yml down && \
            docker compose -f docker-compose.production.yml up -d && \
            sleep 15 && \
            docker compose -f docker-compose.production.yml exec backend python manage.py migrate && \
            docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input"