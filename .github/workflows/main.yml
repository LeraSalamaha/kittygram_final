name: Kittygram CI/CD

on:
  push:
    branches: [ main ]

env:
  POSTGRES_DB: kittygram
  POSTGRES_USER: kittygram_user
  POSTGRES_PASSWORD: kittygram_password
  DB_NAME: kittygram
  DB_HOST: localhost
  DB_PORT: 5432
  SECRET_KEY: 11052004Lera
  DEBUG: "False"
  ALLOWED_HOSTS: "*"

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      
      - name: Run tests
        run: |
          cd backend
          python manage.py test

  build_locally:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker images
        run: |
          docker build -t kittygram_backend ./backend
          docker build -t kittygram_frontend ./frontend
          docker build -t kittygram_gateway ./nginx

  deploy:
    needs: build_locally
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup SSH key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" | pbcopy 
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          echo "$SSH_PASSPHRASE" | ssh-add ~/.ssh/id_rsa -
      
      - name: Copy compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          source: "docker-compose.yml"
          target: "~/kittygram/"
      
      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            cd ~/kittygram
            docker compose pull
            docker compose down
            docker compose up -d
            docker compose exec backend python manage.py migrate
            docker compose exec backend python manage.py collectstatic --no-input