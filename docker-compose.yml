version: '3.8'

volumes:
  static:
  media:
  pg_data:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

  backend:
    image: ${DOCKERHUB_USERNAME}/kittygram_backend:latest
    env_file: .env
    volumes:
      - static:/app/collected_static
      - media:/app/media
    command: >
      sh -c "python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      gunicorn --bind 0.0.0.0:8000 kittygram_backend.wsgi"
    depends_on:
      - db
    restart: always

  frontend:
    image: ${DOCKERHUB_USERNAME}/kittygram_frontend:latest
    volumes:
      - static:/app/static
    command: sh -c "cp -r /app/build/. /app/static/"
    restart: always

  nginx:
    image: ${DOCKERHUB_USERNAME}/kittygram_nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static:/static
      - media:/media
    depends_on:
      - backend
      - frontend
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/conf.d:/etc/nginx/conf.d
    command: certonly --webroot --webroot-path=/var/www/html --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}
    depends_on:
      - nginx